p_val_WR  = result$results[2,4]
p_val_WO  = result$results[3,4]
return(unname(c(val_GPC, val_WR, val_WO, p_val_GPC, p_val_WR, p_val_WO)))
}
stopCluster(cl)
end_time = Sys.time()
execution_time = end_time - start_time
print(execution_time)
results_df = as.data.frame(results)
colnames(results_df) = c("val_GPC", "val_WR", "val_WO", "p_val_GPC", "p_val_WR", "p_val_WO")
values_long <- results_df %>%
select(starts_with("val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "value") %>%
mutate(method = recode(method,
"val_GPC" = "GPC",
"val_WR"  = "WR",
"val_WO"  = "WO"))
pvals_long <- results_df %>%
select(starts_with("p_val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "p_value") %>%
mutate(method = recode(method,
"p_val_GPC" = "GPC",
"p_val_WR"  = "WR",
"p_val_WO"  = "WO"))
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_boxplot(alpha = 0.7) +
theme_minimal() +
labs(title = "Distribution des p-valeurs ",
x = "Test", y = "p-valeur") +
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_jitter(width = 0.15, size = 1.5, color = "black", alpha = 0.8)+
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
theme_minimal() +
labs(title = "Distribution des p-valeurs",
x = "Test", y = "p-valeur") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(pvals_long$method=="GPC" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(pvals_long$method=="WO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(pvals_long$method=="WRO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
# p_val_WO=subset(pvals_long, method=="WO")
# p_val_WR=subset(pvals_long, method=="WR")
n_sim = 200
n=40
nb_core = (parallel::detectCores() / 2) + 1
cl = makeCluster(nb_core)
registerDoParallel(cl)
start_time = Sys.time()
results = foreach(s = 1:n_sim, .combine = rbind, .packages = c("dplyr", "survival", "parallel", "foreach", "doParallel"), .export = c("eval_diff", "affect_crit_strata", "calcul_stat_strata", "type_variable", "extract_tte")) %dopar% {
set.seed(s)
strata = sample(rep(c(1,3,5,8), each = 10))
treatmentdata = as.data.frame(cbind(gener_continue(2.5, 1.5), gener_continue(2, 4), strata))
controldata = as.data.frame(cbind(gener_continue(2, 1), gener_continue(2, 4), strata))
result = GPC_WO_WR_strata(treatmentdata, controldata, p.val = "two.sided", strata = strata, threshold = 0.5, histo=FALSE)
val_GPC = result$results[1,2]
val_WR  = result$results[2,2]
val_WO  = result$results[3,2]
p_val_GPC = result$results[1,4]
p_val_WR  = result$results[2,4]
p_val_WO  = result$results[3,4]
return(unname(c(val_GPC, val_WR, val_WO, p_val_GPC, p_val_WR, p_val_WO)))
}
stopCluster(cl)
end_time = Sys.time()
execution_time = end_time - start_time
print(execution_time)
results_df = as.data.frame(results)
colnames(results_df) = c("val_GPC", "val_WR", "val_WO", "p_val_GPC", "p_val_WR", "p_val_WO")
values_long <- results_df %>%
select(starts_with("val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "value") %>%
mutate(method = recode(method,
"val_GPC" = "GPC",
"val_WR"  = "WR",
"val_WO"  = "WO"))
pvals_long <- results_df %>%
select(starts_with("p_val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "p_value") %>%
mutate(method = recode(method,
"p_val_GPC" = "GPC",
"p_val_WR"  = "WR",
"p_val_WO"  = "WO"))
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_boxplot(alpha = 0.7) +
theme_minimal() +
labs(title = "Distribution des p-valeurs ",
x = "Test", y = "p-valeur") +
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_jitter(width = 0.15, size = 1.5, color = "black", alpha = 0.8)+
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
theme_minimal() +
labs(title = "Distribution des p-valeurs",
x = "Test", y = "p-valeur") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(pvals_long$method=="GPC" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(pvals_long$method=="WO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(pvals_long$method=="WRO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
# p_val_WO=subset(pvals_long, method=="WO")
# p_val_WR=subset(pvals_long, method=="WR")
vlines <- data.frame(
method = c("GPC", "WR", "WO"),
intercept = c(0, 1, 1)
)
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = "H_0"), color = "black", linetype = "dashed") +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H_0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = "H_0"), color = "black", linetype = "dashed", lwd = 1.5) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H_0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = "H_0"), color = "black", linetype = "dashed", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H_0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = linetype_label), color = "black", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H₀" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
vlines <- data.frame(
method = c("GPC", "WR", "WO"),
intercept = c(0, 1, 1),
linetype_label = "Hypothèse H₀"
)
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = linetype_label),
color = "black", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H₀" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
vlines <- data.frame(
method = c("GPC", "WR", "WO"),
intercept = c(0, 1, 1),
linetype_label = "Hypothèse H0"
)
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = linetype_label),
color = "black", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_boxplot(alpha = 0.7) +
theme_minimal() +
labs(title = "Distribution des p-valeurs ",
x = "Test", y = "p-valeur") +
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_jitter(width = 0.15, size = 1.5, color = "black", alpha = 0.8)+
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
theme_minimal() +
labs(title = "Distribution des p-valeurs",
x = "Test", y = "p-valeur") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
p_val_WO=subset(pvals_long, method=="WO")
p_val_WR=subset(pvals_long, method=="WR")
View(p_val_WR)
n_sim = 200
n=40
nb_core = (parallel::detectCores() / 2) + 1
cl = makeCluster(nb_core)
registerDoParallel(cl)
start_time = Sys.time()
results = foreach(s = 1:n_sim, .combine = rbind, .packages = c("dplyr", "survival", "parallel", "foreach", "doParallel"), .export = c("eval_diff", "affect_crit_strata", "calcul_stat_strata", "type_variable", "extract_tte")) %dopar% {
set.seed(s)
strata = sample(rep(c(1,3,5,8), each = 10))
treatmentdata = as.data.frame(cbind(gener_continue(2.7, 1.6), gener_continue(2, 4), strata))
controldata = as.data.frame(cbind(gener_continue(2, 1), gener_continue(2, 4), strata))
result = GPC_WO_WR_strata(treatmentdata, controldata, p.val = "two.sided", strata = strata, threshold = 0.5, histo=FALSE)
val_GPC = result$results[1,2]
val_WR  = result$results[2,2]
val_WO  = result$results[3,2]
p_val_GPC = result$results[1,4]
p_val_WR  = result$results[2,4]
p_val_WO  = result$results[3,4]
return(unname(c(val_GPC, val_WR, val_WO, p_val_GPC, p_val_WR, p_val_WO)))
}
stopCluster(cl)
end_time = Sys.time()
execution_time = end_time - start_time
print(execution_time)
results_df = as.data.frame(results)
colnames(results_df) = c("val_GPC", "val_WR", "val_WO", "p_val_GPC", "p_val_WR", "p_val_WO")
values_long <- results_df %>%
select(starts_with("val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "value") %>%
mutate(method = recode(method,
"val_GPC" = "GPC",
"val_WR"  = "WR",
"val_WO"  = "WO"))
pvals_long <- results_df %>%
select(starts_with("p_val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "p_value") %>%
mutate(method = recode(method,
"p_val_GPC" = "GPC",
"p_val_WR"  = "WR",
"p_val_WO"  = "WO"))
vlines <- data.frame(
method = c("GPC", "WR", "WO"),
intercept = c(0, 1, 1),
linetype_label = "Hypothèse H0"
)
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = linetype_label),
color = "black", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_boxplot(alpha = 0.7) +
theme_minimal() +
labs(title = "Distribution des p-valeurs ",
x = "Test", y = "p-valeur") +
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_jitter(width = 0.15, size = 1.5, color = "black", alpha = 0.8)+
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
theme_minimal() +
labs(title = "Distribution des p-valeurs",
x = "Test", y = "p-valeur") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(pvals_long$method=="GPC" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(pvals_long$method=="WO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(pvals_long$method=="WRO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
p_val_WO=subset(pvals_long, method=="WO")
p_val_WR=subset(pvals_long, method=="WR")
n_sim = 200
n=40
nb_core = (parallel::detectCores() / 2) + 1
cl = makeCluster(nb_core)
registerDoParallel(cl)
start_time = Sys.time()
results = foreach(s = 1:n_sim, .combine = rbind, .packages = c("dplyr", "survival", "parallel", "foreach", "doParallel"), .export = c("eval_diff", "affect_crit_strata", "calcul_stat_strata", "type_variable", "extract_tte")) %dopar% {
set.seed(s)
strata = sample(rep(c(1,3,5,8), each = 10))
treatmentdata = as.data.frame(cbind(gener_continue(2.7, 2), gener_continue(2, 4), strata))
controldata = as.data.frame(cbind(gener_continue(2, 1), gener_continue(2, 4), strata))
result = GPC_WO_WR_strata(treatmentdata, controldata, p.val = "two.sided", strata = strata, threshold = 0.5, histo=FALSE)
val_GPC = result$results[1,2]
val_WR  = result$results[2,2]
val_WO  = result$results[3,2]
p_val_GPC = result$results[1,4]
p_val_WR  = result$results[2,4]
p_val_WO  = result$results[3,4]
return(unname(c(val_GPC, val_WR, val_WO, p_val_GPC, p_val_WR, p_val_WO)))
}
stopCluster(cl)
end_time = Sys.time()
execution_time = end_time - start_time
print(execution_time)
results_df = as.data.frame(results)
colnames(results_df) = c("val_GPC", "val_WR", "val_WO", "p_val_GPC", "p_val_WR", "p_val_WO")
values_long <- results_df %>%
select(starts_with("val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "value") %>%
mutate(method = recode(method,
"val_GPC" = "GPC",
"val_WR"  = "WR",
"val_WO"  = "WO"))
pvals_long <- results_df %>%
select(starts_with("p_val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "p_value") %>%
mutate(method = recode(method,
"p_val_GPC" = "GPC",
"p_val_WR"  = "WR",
"p_val_WO"  = "WO"))
vlines <- data.frame(
method = c("GPC", "WR", "WO"),
intercept = c(0, 1, 1),
linetype_label = "Hypothèse H0"
)
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = linetype_label),
color = "black", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_boxplot(alpha = 0.7) +
theme_minimal() +
labs(title = "Distribution des p-valeurs ",
x = "Test", y = "p-valeur") +
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_jitter(width = 0.15, size = 1.5, color = "black", alpha = 0.8)+
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
theme_minimal() +
labs(title = "Distribution des p-valeurs",
x = "Test", y = "p-valeur") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(pvals_long$method=="GPC" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(pvals_long$method=="WO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(pvals_long$method=="WRO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
p_val_WO=subset(pvals_long, method=="WO")
p_val_WR=subset(pvals_long, method=="WR")
View(p_val_WO)
View(p_val_WO)
n_sim = 200
n=40
nb_core = (parallel::detectCores() / 2) + 1
cl = makeCluster(nb_core)
registerDoParallel(cl)
start_time = Sys.time()
results = foreach(s = 1:n_sim, .combine = rbind, .packages = c("dplyr", "survival", "parallel", "foreach", "doParallel"), .export = c("eval_diff", "affect_crit_strata", "calcul_stat_strata", "type_variable", "extract_tte")) %dopar% {
set.seed(s)
strata = sample(rep(c(1,3,5,8), each = 10))
treatmentdata = as.data.frame(cbind(gener_continue(4, 2), gener_continue(2, 4), strata))
controldata = as.data.frame(cbind(gener_continue(2, 1), gener_continue(2, 4), strata))
result = GPC_WO_WR_strata(treatmentdata, controldata, p.val = "two.sided", strata = strata, threshold = 0.5, histo=FALSE)
val_GPC = result$results[1,2]
val_WR  = result$results[2,2]
val_WO  = result$results[3,2]
p_val_GPC = result$results[1,4]
p_val_WR  = result$results[2,4]
p_val_WO  = result$results[3,4]
return(unname(c(val_GPC, val_WR, val_WO, p_val_GPC, p_val_WR, p_val_WO)))
}
stopCluster(cl)
end_time = Sys.time()
execution_time = end_time - start_time
print(execution_time)
results_df = as.data.frame(results)
colnames(results_df) = c("val_GPC", "val_WR", "val_WO", "p_val_GPC", "p_val_WR", "p_val_WO")
values_long <- results_df %>%
select(starts_with("val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "value") %>%
mutate(method = recode(method,
"val_GPC" = "GPC",
"val_WR"  = "WR",
"val_WO"  = "WO"))
pvals_long <- results_df %>%
select(starts_with("p_val_")) %>%
pivot_longer(cols = everything(), names_to = "method", values_to = "p_value") %>%
mutate(method = recode(method,
"p_val_GPC" = "GPC",
"p_val_WR"  = "WR",
"p_val_WO"  = "WO"))
vlines <- data.frame(
method = c("GPC", "WR", "WO"),
intercept = c(0, 1, 1),
linetype_label = "Hypothèse H0"
)
# Graphique
ggplot(values_long, aes(x = value, fill = method)) +
geom_density(alpha = 0.6) +
geom_vline(data = vlines, aes(xintercept = intercept, linetype = linetype_label),
color = "black", lwd = 1) +
facet_wrap(~method, scales = "free") +
theme_minimal() +
labs(title = "Distribution des statistiques de test",
x = "Valeur", y = "Densité") +
scale_linetype_manual(name = "", values = c("Hypothèse H0" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_boxplot(alpha = 0.7) +
theme_minimal() +
labs(title = "Distribution des p-valeurs ",
x = "Test", y = "p-valeur") +
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
scale_fill_manual(values = c("orange", "purple", "cyan"))
ggplot(pvals_long, aes(x = method, y = p_value, fill = method)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_jitter(width = 0.15, size = 1.5, color = "black", alpha = 0.8)+
geom_hline(aes(yintercept = 0.05, linetype = "Seuil de significativité"), color = "red") +
scale_linetype_manual(name = "", values = c("Seuil de significativité" = "dashed")) +
theme_minimal() +
labs(title = "Distribution des p-valeurs",
x = "Test", y = "p-valeur") +
scale_fill_manual(values = c("orange", "purple", "cyan"))
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(pvals_long$method=="GPC" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(pvals_long$method=="WO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(pvals_long$method=="WRO" & pvals_long$p_value < 0.05)/n_sim,"% \n")
p_val_WO=subset(pvals_long, method=="WO")
p_val_WR=subset(pvals_long, method=="WR")
p_val_GPC=subset(pvals_long, method=="GPC")
p_val_WO=subset(pvals_long, method=="WO")
p_val_WR=subset(pvals_long, method=="WR")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(pvals_GPC$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(p_val_GPC$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(p_val_WO$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(p_val_WR$p_value < 0.05)/n_sim,"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour la GPC : ",sum(p_val_GPC$p_value < 0.05)/nrow(p_val_GPC),"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WO : ",sum(p_val_WO$p_value < 0.05)/nrow(p_val_WO),"% \n")
cat("Pourcentage de p-valeur rejettant H0 à 5% pour les WR : ",sum(p_val_WR$p_value < 0.05)/nrow(p_val_WR),"% \n")
View(p_val_GPC)
mean_T = 4
sd_T = 2
mean_C = 2
sd_C = 1
x = seq(mean_T - 4*sd_T, mean_T + 4*sd_T, length.out = 100)
y1 = dnorm(x, mean = mean_T, sd = sd_T)
y2 = dnorm(x, mean = mean_C, sd = sd_C)
df <- data.frame(
x = rep(x, 2),
y = c(y1, y2),
groupe = rep(c("T", "C"), each = length(x))
)
ggplot(df, aes(x = x, y = y, color = groupe)) +
geom_line(size = 1.2) +
labs(title = "Densités des lois normales",
x = "x", y = "Densité") +
scale_color_manual(values = c("T" = "darkblue", "C" = "darkred")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, color = groupe)) +
geom_line(linewidth  = 1.2) +
labs(title = "Densités des lois normales",
x = "x", y = "Densité") +
scale_color_manual(values = c("T" = "darkblue", "C" = "darkred")) +
theme_minimal()
n_sim = 200
n=40
mean_T = 4
sd_T = 1
mean_C = 2
sd_C = 1
nb_core = (parallel::detectCores() / 2) + 1
cl = makeCluster(nb_core)
registerDoParallel(cl)
start_time = Sys.time()
results = foreach(s = 1:n_sim, .combine = rbind, .packages = c("dplyr", "survival", "parallel", "foreach", "doParallel"), .export = c("eval_diff", "affect_crit_strata", "calcul_stat_strata", "type_variable", "extract_tte")) %dopar% {
set.seed(s)
strata = sample(rep(c(1,3,5,8), each = 10))
treatmentdata = as.data.frame(cbind(gener_continue(mean_T, sd_T), strata))
controldata = as.data.frame(cbind(gener_continue(mean_C, sd_C), strata))
result = GPC_WO_WR_strata(treatmentdata, controldata, p.val = "two.sided", strata = strata, threshold = 0.5, histo=FALSE)
val_GPC = result$results[1,2]
val_WR  = result$results[2,2]
val_WO  = result$results[3,2]
p_val_GPC = result$results[1,4]
p_val_WR  = result$results[2,4]
p_val_WO  = result$results[3,4]
return(unname(c(val_GPC, val_WR, val_WO, p_val_GPC, p_val_WR, p_val_WO)))
}
